{"ast":null,"code":"import axios from \"axios\";\nimport { createUserFailure, createUserStart, createUserSuccess, deleteUserFailure, deleteUserStart, deleteUserSuccess, getUsersFailure, getUsersStart, getUsersSuccess } from \"./UserActions\";\nexport const getUsers = async dispatch => {\n  dispatch(getUsersStart());\n\n  try {\n    const res = await axios.get(\"/users\", {\n      headers: {\n        token: \"header \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(getUsersSuccess(res.users));\n  } catch (error) {\n    dispatch(getUsersFailure());\n  }\n}; //create\n\nexport const createUser = async (user, dispatch) => {\n  dispatch(createUserStart());\n\n  try {\n    const res = await axios.post(\"/users\", user, {\n      headers: {\n        token: \"header \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(createUserSuccess(res.data));\n  } catch (error) {\n    dispatch(createUserFailure());\n  }\n}; //delete\n\nexport const deleteUser = async (id, dispatch) => {\n  dispatch(deleteUserStart());\n\n  try {\n    await axios.delete(\"/users/\" + id, {\n      headers: {\n        token: \"header \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(deleteUserSuccess(id));\n  } catch (error) {\n    dispatch(deleteUserFailure());\n  }\n};","map":{"version":3,"sources":["D:/Nodejs/netflix/admin/src/context/userContext/apiCalls.js"],"names":["axios","createUserFailure","createUserStart","createUserSuccess","deleteUserFailure","deleteUserStart","deleteUserSuccess","getUsersFailure","getUsersStart","getUsersSuccess","getUsers","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","users","error","createUser","user","post","data","deleteUser","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,eAPF,EAQEC,aARF,EASEC,eATF,QAUO,eAVP;AAYA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AAC1CA,EAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,QAAV,EAAoB;AACpCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADrD;AAD2B,KAApB,CAAlB;AAKAT,IAAAA,QAAQ,CAACF,eAAe,CAACG,GAAG,CAACS,KAAL,CAAhB,CAAR;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACD;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMgB,UAAU,GAAG,OAAOC,IAAP,EAAab,QAAb,KAA0B;AAClDA,EAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAMU,GAAG,GAAG,MAAMZ,KAAK,CAACyB,IAAN,CAAW,QAAX,EAAqBD,IAArB,EAA2B;AAC3CV,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADrD;AADkC,KAA3B,CAAlB;AAKAT,IAAAA,QAAQ,CAACR,iBAAiB,CAACS,GAAG,CAACc,IAAL,CAAlB,CAAR;AACD,GAPD,CAOE,OAAOJ,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACD;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAM0B,UAAU,GAAG,OAAOC,EAAP,EAAWjB,QAAX,KAAwB;AAChDA,EAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAML,KAAK,CAAC6B,MAAN,CAAa,YAAYD,EAAzB,EAA6B;AACjCd,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADrD;AADwB,KAA7B,CAAN;AAKAT,IAAAA,QAAQ,CAACL,iBAAiB,CAACsB,EAAD,CAAlB,CAAR;AACD,GAPD,CAOE,OAAON,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACD;AACF,CAZM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  createUserFailure,\r\n  createUserStart,\r\n  createUserSuccess,\r\n  deleteUserFailure,\r\n  deleteUserStart,\r\n  deleteUserSuccess,\r\n  getUsersFailure,\r\n  getUsersStart,\r\n  getUsersSuccess,\r\n} from \"./UserActions\";\r\n\r\nexport const getUsers = async (dispatch) => {\r\n  dispatch(getUsersStart());\r\n  try {\r\n    const res = await axios.get(\"/users\", {\r\n      headers: {\r\n        token: \"header \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(getUsersSuccess(res.users));\r\n  } catch (error) {\r\n    dispatch(getUsersFailure());\r\n  }\r\n};\r\n\r\n//create\r\nexport const createUser = async (user, dispatch) => {\r\n  dispatch(createUserStart());\r\n  try {\r\n    const res = await axios.post(\"/users\", user, {\r\n      headers: {\r\n        token: \"header \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(createUserSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(createUserFailure());\r\n  }\r\n};\r\n\r\n//delete\r\nexport const deleteUser = async (id, dispatch) => {\r\n  dispatch(deleteUserStart());\r\n  try {\r\n    await axios.delete(\"/users/\" + id, {\r\n      headers: {\r\n        token: \"header \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(deleteUserSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteUserFailure());\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
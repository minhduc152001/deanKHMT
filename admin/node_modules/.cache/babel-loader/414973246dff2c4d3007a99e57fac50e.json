{"ast":null,"code":"import axios from \"axios\";\nimport { createListStart, getListsFailure, getListsStart, getListsSuccess } from \"./ListActions\";\nexport const getLists = async dispatch => {\n  dispatch(getListsStart());\n\n  try {\n    const res = await axios.get('/lists', {\n      headers: {\n        token: \"header \" + JSON.parse(localStorage.getItem('user')).accessToken\n      }\n    });\n    dispatch(getListsSuccess(res.data));\n  } catch (error) {\n    dispatch(getListsFailure());\n  }\n}; //create\n\nexport const createList = async (list, dispatch) => {\n  dispatch(createListStart());\n};","map":{"version":3,"sources":["D:/Nodejs/netflix/admin/src/context/listContext/apiCalls.js"],"names":["axios","createListStart","getListsFailure","getListsStart","getListsSuccess","getLists","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","data","error","createList","list"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,aAA3C,EAA0DC,eAA1D,QAAiF,eAAjF;AAEA,OAAO,MAAMC,QAAQ,GAAE,MAAMC,QAAN,IAAiB;AACpCA,EAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;;AACA,MAAI;AACA,UAAMI,GAAG,GAAC,MAAMP,KAAK,CAACQ,GAAN,CAAU,QAAV,EAAmB;AAC/BC,MAAAA,OAAO,EAAC;AACJC,QAAAA,KAAK,EAAC,YAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADrD;AADuB,KAAnB,CAAhB;AAKAT,IAAAA,QAAQ,CAACF,eAAe,CAACG,GAAG,CAACS,IAAL,CAAhB,CAAR;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACH;AACJ,CAZM,C,CAcP;;AACA,OAAO,MAAMgB,UAAU,GAAC,OAAMC,IAAN,EAAWb,QAAX,KAAsB;AAC1CA,EAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACH,CAFM","sourcesContent":["import axios from \"axios\"\r\nimport { createListStart, getListsFailure, getListsStart, getListsSuccess } from \"./ListActions\"\r\n\r\nexport const getLists =async(dispatch)=>{\r\n    dispatch(getListsStart())\r\n    try {\r\n        const res=await axios.get('/lists',{\r\n            headers:{\r\n                token:\"header \"+JSON.parse(localStorage.getItem('user')).accessToken\r\n            }\r\n        })\r\n        dispatch(getListsSuccess(res.data))\r\n    } catch (error) {\r\n        dispatch(getListsFailure())\r\n    }\r\n}\r\n\r\n//create\r\nexport const createList=async(list,dispatch)=>{\r\n    dispatch(createListStart())\r\n}"]},"metadata":{},"sourceType":"module"}